package de.szut.lf8_project.common;

import lombok.NonNull;

import java.util.Objects;

public abstract class ValueType<T> {

    @NonNull
    private final T innerValue;

    public ValueType(@NonNull T generic) {
        this.innerValue = generic;
    }

    public T unbox() {
        return innerValue;
    }

    // Generated by IntellJ
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        ValueType<?> valueType = (ValueType<?>) o;
        return Objects.equals(innerValue, valueType.innerValue);
    }

    @Override
    public int hashCode() {
        return Objects.hash(innerValue);
    }

    @Override
    public String toString() {
        return innerValue.toString();
    }

}
